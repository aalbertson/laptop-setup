- name: Setup SSH config
  blockinfile:
    dest: "{{ ssh_config }}"
    block: |
      Host *
      # IPv4 only for speed
      AddressFamily inet
      Compression yes
      ControlMaster auto
      ControlPath /tmp/ssh_mux_%h_%p_%r
      ControlPersist 10m
      # send a keep-alive after 30s of inactivity
      ServerAliveInterval 30
      
      # SSH over Session Manager
      host i-* mi-*
          #ProxyCommand sh -c "aws --profile $2 --region $3 ssm start-session --target %h"
          #ProxyCommand sh -c "aws --profile $2 --region $3 ssm start-session --target %h"
          ProxyCommand sh -c "aws --profile $2 --region $3 ssm start-session --target %h --document-name AWS-StartSSHSession --parameters 'portNumber=%p'"


- name: Update homebrew
  homebrew:
    update_homebrew: yes

- name: Install virtualenv
  pip:
    name: virtualenv

- name: Install useful tools
  homebrew:
    name: "{{ item }}"
  loop:
    - bash
    - coreutils
    - awscli
    - git
    - wget
    - jq
    - gcc
    - make
    - tfenv
    - ack
    - ncdu
    - htop
    - shellcheck
    - libmagic
    - watch
    - tree
    - kubernetes-cli
    - minikube
    - mysql
    - go
    - k6
    - krew


- name: Make ~/.aws Directory
  file:
    path: "{{ homedir }}/.aws"
    state: directory

- name: Install Cask based tools
  homebrew_cask:
    name: "{{ item }}"
  with_items:
    - aws-vault
    - iterm2
    - visual-studio-code
    - virtualbox
    - vagrant
    - docker
    - firefox
    - vivaldi
    - alfred
    - gimp
    - wireshark
    - yubico-yubikey-manager
    - yubico-yubikey-piv-manager

- name: install ohmyzsh for current user
  shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
  args:
    creates: "{{ home_dir }}/.oh-my-zsh"

- name: set the ohmyzsh theme for the current
  lineinfile:
    dest: "{{ home_dir }}/.zshrc"
    regexp: ^ZSH_THEME=.*$
    line: ZSH_THEME="{{ preferred_ohmyzsh_theme }}"

- name: Fix permissions for zsh auto-completions
  file:
    path: "{{ item }}"
    state: directory
    group: admin
    mode: 0755
  with_items:
    - /usr/local/share/zsh
    - /usr/local/share/zsh/site-functions

- name: Set shell to ZSH
  user:
    name: "{{ username }}"
    shell: /bin/zsh
  become: true

# - name: Make Vagrant directory
#   file:
#     path: "{{ homedir }}/vagrant-boxen"
#     state: directory

# - name: Make ubuntu64 Directory
#   file:
#     path: "{{ homedir }}/vagrant-boxen/ubuntu64"
#     state: directory

# - name: Install ubuntu64
#   shell: vagrant init ubuntu/trusty64
#   args:
#     chdir: "{{ homedir }}/vagrant-boxen/ubuntu64"
#     creates: "{{ homedir }}/vagrant-boxen/ubuntu64/Vagrantfile"
