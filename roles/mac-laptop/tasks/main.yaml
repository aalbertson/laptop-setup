- name: Install homebrew
  shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

- name: Ensure that shell RC file exists
  file:
    path: "{{ shell_rc }}"
    state: touch

- name: Setup shell variables
  blockinfile:
    dest: "{{ shell_rc }}"
    block: |
      # Add homebrew binaries to the path.
      export PATH="/usr/local/bin:${PATH?}"

      # Force certain more-secure behaviours from homebrew
      export HOMEBREW_NO_INSECURE_REDIRECT=1
      export HOMEBREW_CASK_OPTS=--require-sha

      # Prefer GNU binaries to Macintosh binaries.
      export PATH="/usr/local/opt/coreutils/libexec/gnubin:${PATH}"

      # Add devtools binaries to the PATH
      export PATH="${HOME?}/source/devtools/bin:${PATH?}"

      # Point GOPATH to our go sources
      export GOPATH="${HOME?}/go"

      # Point WORKING_ROOT to ~/source symlink
      export WORKING_ROOT="${HOME?}/source"

      # Tell the devenv vm to mount $GOPATH/src rather than just dd-go
      export MOUNT_ALL_GO_SRC=1

#      # store key in the login keychain instead of aws-vault managing a hidden keychain
#      export AWS_VAULT_KEYCHAIN_NAME=login

#      # tweak session times so you don't have to re-enter passwords every 5min
#      export AWS_SESSION_TTL=24h
#      export AWS_ASSUME_ROLE_TTL=1h


- name: Ensure SSH config file exists
  file:
    path: "{{ ssh_config }}"
    state: touch
    # Recommended perms for .ssh/config
    mode: 0644

- name: Setup SSH config
  blockinfile:
    dest: "{{ ssh_config }}"
    block: |
      Host *
      # IPv4 only for speed
      AddressFamily inet
      Compression yes
      ControlMaster auto
      ControlPath /tmp/ssh_mux_%h_%p_%r
      ControlPersist 10m
      # send a keep-alive after 30s of inactivity
      ServerAliveInterval 30

- name: Update homebrew
  homebrew:
    update_homebrew: yes

- name: Install GNU bash/coreutils
  homebrew:
    name: "{{ item }}"
  loop:
    - bash
    - coreutils

- name: Install homebrew python
  homebrew:
    name: python

# TODO: Figure out a file this creates, then add args: creates: ...
- name: Install virtualenv
  pip:
    name: virtualenv

- name: Install golang
  homebrew:
    name: "{{ item }}"
  loop:
    - golang

- name: Install useful tools
  homebrew:
    name: "{{ item }}"
    # name: [u'git', u'jq', u'gcc', u'make', u'gpg2', u'pinentry', u'tfenv', u'mackup']
  loop:
    - git
    - jq
    - gcc
    - make
    - gpg2
    - pinentry
    - tfenv # needed for cloudops
    - mackup
    - ack

# - name: Create Company golang directory structure
#   file:
#     path: "{{ homedir }}/go/src/github.com/[[Company]]"
#     state: directory

# - name: Create ~/wrk symlink
#   file:
#     path: "{{ homedir }}/wrk"
#     state: link
#     src: "{{ homedir }}/go/src/github.com/[[Company]]"

# - name: Clone Repos
#   git:
#     repo: "git@github.com:[[Company]]/{{ item }}"
#     dest: "{{ homedir }}/go/src/github.com/[[Company]]/{{ item }}"
#     key_file: "{{ homedir }}/.ssh/id_rsa"
#     update: no
#   with_items:
#     - architecture
#     - consul-config
#     - datacenter-config
#     - datastores
#     - devtools
#     - dogweb
#     - dd-go
#     - devops
#     - cloudops
#     - images
#     - k8s-resources
#     - logs-backend

- name: Install aws-vault tool
  homebrew_cask:
    name: aws-vault

- name: Make ~/.aws Directory
  file:
    path: "{{ homedir }}/.aws"
    state: directory

- name: Install virtualbox and vagrant
  homebrew_cask:
    name: "{{ item }}"
  with_items:
    - virtualbox
    - vagrant

- name: Make Vagrant directory
  file:
    path: "{{ homedir }}/vagrant-boxen"
    state: directory

- name: Make ubuntu64 Directory
  file:
    path: "{{ homedir }}/vagrant-boxen/ubuntu64"
    state: directory

- name: Install ubuntu64
  shell: vagrant init ubuntu/trusty64
  args:
    chdir: "{{ homedir }}/vagrant-boxen/ubuntu64"
    creates: "{{ homedir }}/vagrant-boxen/ubuntu64/Vagrantfile"
